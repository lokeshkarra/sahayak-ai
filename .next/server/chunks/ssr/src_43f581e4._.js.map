{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/components/dashboard/summary-card.tsx"],"sourcesContent":["import { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\nimport { type LucideIcon } from \"lucide-react\";\n\ninterface SummaryCardProps {\n  title: string;\n  value: string;\n  Icon: LucideIcon;\n  description?: string;\n}\n\nexport function SummaryCard({ title, value, Icon, description }: SummaryCardProps) {\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-muted-foreground\">{title}</CardTitle>\n        <Icon className=\"h-4 w-4 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">{value}</div>\n        {description && <p className=\"text-xs text-muted-foreground\">{description}</p>}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAUO,SAAS,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAoB;IAC/E,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAA6C;;;;;;kCAClE,8OAAC;wBAAK,WAAU;;;;;;;;;;;;0BAElB,8OAAC,gIAAA,CAAA,cAAW;;kCACV,8OAAC;wBAAI,WAAU;kCAAsB;;;;;;oBACpC,6BAAe,8OAAC;wBAAE,WAAU;kCAAiC;;;;;;;;;;;;;;;;;;AAItE","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = React.forwardRef<\n  React.ElementRef<typeof RechartsPrimitive.Tooltip>,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip>\n>(({ content, ...props }, ref) => {\n  const { config } = useChart()\n\n  const TooltipContextProvider = ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) => (\n    <ChartContext.Provider value={{ config }}>{children}</ChartContext.Provider>\n  )\n\n  return (\n    <RechartsPrimitive.Tooltip\n      ref={ref}\n      content={\n        content && React.isValidElement(content)\n          ? React.createElement(TooltipContextProvider, {}, content)\n          : content\n      }\n      {...props}\n    />\n  )\n})\nChartTooltip.displayName = \"ChartTooltip\"\n\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/components/dashboard/net-worth-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo, useState } from \"react\";\nimport { Area, AreaChart, CartesianGrid, XAxis, YAxis } from \"recharts\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { financialData } from \"@/lib/mock-data\";\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  type ChartConfig,\n} from \"@/components/ui/chart\";\n\nconst chartConfig = {\n  value: {\n    label: \"Net Worth\",\n    color: \"hsl(var(--chart-1))\",\n  },\n} satisfies ChartConfig;\n\nexport function NetWorthChart() {\n  const chartData = financialData.netWorthHistory;\n  \n  const years = useMemo(() => {\n    return [...new Set(chartData.map((item) => item.year))].sort((a, b) => b - a);\n  }, [chartData]);\n  \n  const [selectedYear, setSelectedYear] = useState(years[0]);\n\n  const filteredData = useMemo(() => {\n    return chartData.filter((item) => item.year === selectedYear);\n  }, [chartData, selectedYear]);\n\n  return (\n    <Card className=\"col-span-1 lg:col-span-2\">\n      <CardHeader>\n        <div className=\"flex justify-between items-start\">\n            <div>\n                <CardTitle>Net Worth Growth</CardTitle>\n                <CardDescription>\n                  Your net worth trend for {selectedYear}.\n                </CardDescription>\n            </div>\n            <Select value={String(selectedYear)} onValueChange={(value) => setSelectedYear(Number(value))}>\n                <SelectTrigger className=\"w-[120px]\">\n                    <SelectValue placeholder=\"Select year\" />\n                </SelectTrigger>\n                <SelectContent>\n                    {years.map(year => (\n                        <SelectItem key={year} value={String(year)}>{year}</SelectItem>\n                    ))}\n                </SelectContent>\n            </Select>\n        </div>\n      </CardHeader>\n      <CardContent className=\"pl-2\">\n        <ChartContainer config={chartConfig} className=\"h-[350px] w-full\">\n          <AreaChart\n            accessibilityLayer\n            data={filteredData}\n            margin={{\n              left: 12,\n              right: 12,\n            }}\n          >\n            <CartesianGrid vertical={false} />\n            <XAxis\n              dataKey=\"month\"\n              stroke=\"hsl(var(--muted-foreground))\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n            />\n            <YAxis\n              stroke=\"hsl(var(--muted-foreground))\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n              tickFormatter={(value) => `₹${Number(value) / 100000}L`}\n            />\n            <ChartTooltip\n              cursor={{ fill: \"hsl(var(--muted))\" }}\n              content={\n                <ChartTooltipContent\n                  formatter={(value, name, item) => (\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-bold\">{item.payload.month} {item.payload.year}</span>\n                      <span>₹{Number(value).toLocaleString(\"en-IN\")}</span>\n                    </div>\n                  )}\n                />\n              }\n            />\n             <defs>\n              <linearGradient id=\"fillValue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"5%\"\n                  stopColor=\"var(--color-value)\"\n                  stopOpacity={0.8}\n                />\n                <stop\n                  offset=\"95%\"\n                  stopColor=\"var(--color-value)\"\n                  stopOpacity={0.1}\n                />\n              </linearGradient>\n            </defs>\n            <Area\n              dataKey=\"value\"\n              type=\"monotone\"\n              fill=\"url(#fillValue)\"\n              stroke=\"var(--color-value)\"\n              strokeWidth={2}\n              dot={{\n                r: 4,\n                strokeWidth: 2,\n                fill: 'hsl(var(--background))'\n              }}\n              activeDot={{\n                r: 6,\n                strokeWidth: 2,\n                fill: 'hsl(var(--background))'\n              }}\n              animationDuration={1500}\n            />\n          </AreaChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 971, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/ai/flows/financial-insights.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Provides personalized financial insights using natural language questions.\n *\n * - getFinancialInsights - A function that processes user financial questions and returns insights.\n * - FinancialInsightsInput - The input type for the getFinancialInsights function.\n * - FinancialInsightsOutput - The return type for the getFinancialInsights function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst FinancialInsightsInputSchema = z.object({\n  question: z.string().describe('The natural language question about the user\\'s finances.'),\n  financialData: z.string().describe('Consolidated financial data from Fi’s MCP, including assets, liabilities, net worth, credit scores, EPF, and more.'),\n});\nexport type FinancialInsightsInput = z.infer<typeof FinancialInsightsInputSchema>;\n\nconst FinancialInsightsOutputSchema = z.object({\n  insight: z.string().describe('The personalized financial insight in response to the question.'),\n});\nexport type FinancialInsightsOutput = z.infer<typeof FinancialInsightsOutputSchema>;\n\nexport async function getFinancialInsights(input: FinancialInsightsInput): Promise<FinancialInsightsOutput> {\n  return financialInsightsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'financialInsightsPrompt',\n  input: {schema: FinancialInsightsInputSchema},\n  output: {schema: FinancialInsightsOutputSchema},\n  prompt: `You are **Personal Chanakya**, a strategic AI finance advisor built on Indian financial wisdom and powered by Gemini.\n\nYou help users make sense of their financial life using real data from the Fi MCP Server. The user will provide structured financial data in JSON format.\n\nUse this data to answer questions, offer advice, simulate future scenarios, detect anomalies, and visualize key financial trends.\n\n---\n\n### 🎯 Your Core Objectives:\n\n1.  **Understand financial goals** and guide users towards them\n2.  **Detect underperforming assets or anomalies**\n3.  **Advise on debt strategy**\n4.  **Simulate future scenarios**\n5.  **Track net worth and trends**\n6.  **Maintain data privacy and exportability**\n\n---\n\n### 🧠 Your Behavior:\n\n-   Be **conversational**, **wise**, and **strategic** like Chanakya.\n-   Focus on **clarity**, **actionable suggestions**, and **trust**.\n-   Don’t give generic advice — always use the user’s actual data.\n-   It is crucial that you respond in the same language as the user's question.\n\n---\n\n### 🧾 Input Data\n\nHere is the user's financial data in JSON format:\n{{{financialData}}}\n\n---\n\nNow, answer the user's question based on their data.\n\nUser Question: {{{question}}}\n`,\n});\n\nconst financialInsightsFlow = ai.defineFlow(\n  {\n    name: 'financialInsightsFlow',\n    inputSchema: FinancialInsightsInputSchema,\n    outputSchema: FinancialInsightsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAwBsB,uBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 984, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1048, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/components/dashboard/insights-agent.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Send, Loader, Bot } from \"lucide-react\";\nimport { getFinancialInsights } from \"@/ai/flows/financial-insights\";\nimport { getFinancialDataAsString } from \"@/lib/mock-data\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\n\nexport function InsightsAgent() {\n  const [query, setQuery] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [insight, setInsight] = useState(\"\");\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!query) return;\n\n    setIsLoading(true);\n    setInsight(\"\");\n    try {\n      const response = await getFinancialInsights({\n        question: query,\n        financialData: getFinancialDataAsString(),\n      });\n      setInsight(response.insight);\n    } catch (error) {\n      console.error(error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to get insights. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"col-span-1 lg:col-span-2\">\n      <CardHeader>\n        <CardTitle>AI Financial Insights</CardTitle>\n        <CardDescription>Ask a question about your finances.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"flex items-center gap-2 mb-4\">\n          <Input\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"e.g., How's my net worth growing?\"\n            disabled={isLoading}\n          />\n          <Button type=\"submit\" disabled={isLoading || !query}>\n            {isLoading ? (\n              <Loader className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <Send className=\"h-4 w-4\" />\n            )}\n            <span className=\"sr-only\">Get Insight</span>\n          </Button>\n        </form>\n        {insight && (\n          <Alert>\n            <Bot className=\"h-4 w-4\" />\n            <AlertTitle>Personal Chanakya's Insight</AlertTitle>\n            <AlertDescription className=\"prose prose-sm max-w-none\">\n              {insight.split('\\n').map((line, index) => (\n                <p key={index}>{line}</p>\n              ))}\n            </AlertDescription>\n          </Alert>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAhBA;;;;;;;;;;;AAkBO,SAAS;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,CAAC,OAAO;QAEZ,aAAa;QACb,WAAW;QACX,IAAI;YACF,MAAM,WAAW,MAAM,CAAA,GAAA,0JAAA,CAAA,uBAAoB,AAAD,EAAE;gBAC1C,UAAU;gBACV,eAAe,CAAA,GAAA,0HAAA,CAAA,2BAAwB,AAAD;YACxC;YACA,WAAW,SAAS,OAAO;QAC7B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;YACd,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;QACF,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;kCAAC;;;;;;kCACX,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC,gIAAA,CAAA,cAAW;;kCACV,8OAAC;wBAAK,UAAU;wBAAc,WAAU;;0CACtC,8OAAC,iIAAA,CAAA,QAAK;gCACJ,OAAO;gCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gCACxC,aAAY;gCACZ,UAAU;;;;;;0CAEZ,8OAAC,kIAAA,CAAA,SAAM;gCAAC,MAAK;gCAAS,UAAU,aAAa,CAAC;;oCAC3C,0BACC,8OAAC,sMAAA,CAAA,SAAM;wCAAC,WAAU;;;;;6DAElB,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAElB,8OAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;;oBAG7B,yBACC,8OAAC,iIAAA,CAAA,QAAK;;0CACJ,8OAAC,gMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;0CACf,8OAAC,iIAAA,CAAA,aAAU;0CAAC;;;;;;0CACZ,8OAAC,iIAAA,CAAA,mBAAgB;gCAAC,WAAU;0CACzB,QAAQ,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,sBAC9B,8OAAC;kDAAe;uCAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxB","debugId":null}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/services/mcp-client.ts"],"sourcesContent":["// // A simple client for interacting with the fi-mcp-dev server.\n// // In a real application, this would be much more robust, handling errors,\n// // session persistence, and the full JSON-RPC spec.\n\n// const MCP_SERVER_URL = 'http://localhost:8080/mcp/stream';\n// let sessionId = `mcp-session-${crypto.randomUUID()}`;\n\n// interface McpResponse {\n//     jsonrpc: string;\n//     id: number;\n//     result?: {\n//         content: { type: string; text: string; }[];\n//     };\n//     error?: {\n//         code: number;\n//         message: string;\n//         data: {\n//             login_url: string;\n//         }\n//     }\n// }\n\n// /**\n//  * A client for interacting with the Fi Money Mock MCP Server.\n//  */\n// export class McpClient {\n//     private sessionId: string;\n\n//     constructor() {\n//         // In a real app, you would persist and retrieve this session ID\n//         this.sessionId = `mcp-session-${crypto.randomUUID()}`;\n//     }\n\n//     /**\n//      * Calls a tool on the MCP server.\n//      * @param toolName The name of the tool to call (e.g., 'fetch_net_worth').\n//      * @param args The arguments for the tool.\n//      * @returns The parsed JSON response from the tool.\n//      */\n//     async callTool(toolName: string, args: Record<string, any> = {}): Promise<any> {\n//         console.log(`Calling tool: ${toolName} with session: ${this.sessionId}`);\n        \n//         try {\n//             const response = await fetch(MCP_SERVER_URL, {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Mcp-Session-Id': this.sessionId,\n//                 },\n//                 body: JSON.stringify({\n//                     jsonrpc: '2.0',\n//                     id: 1,\n//                     method: 'tools/call',\n//                     params: {\n//                         name: toolName,\n//                         arguments: args,\n//                     },\n//                 }),\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error(`HTTP error! status: ${response.status}`);\n//             }\n\n//             const data: McpResponse = await response.json();\n\n//             if (data.error) {\n//                 // Handle the case where the session is invalid and a login is required.\n//                 if (data.error.data?.login_url) {\n//                     const loginUrl = `${data.error.data.login_url}&sessionId=${this.sessionId}`;\n//                     console.warn(`MCP session invalid. Please log in: ${loginUrl}`);\n//                     // In a real app, you would redirect the user to this URL\n//                     // or open it in a popup.\n//                     throw new Error(`Session expired. Please log in again. URL: ${loginUrl}`);\n//                 }\n//                 throw new Error(`MCP Error: ${data.error.message}`);\n//             }\n            \n//             if (data.result && data.result.content[0]?.text) {\n//                 // The actual tool response is a JSON string within the 'text' field.\n//                 return JSON.parse(data.result.content[0].text);\n//             }\n\n//             return data.result;\n\n//         } catch (error) {\n//             console.error('Failed to call MCP tool:', error);\n//             // This is a good place to add user-facing error handling.\n//             // For now, we'll re-throw to be handled by the caller.\n//             throw error;\n//         }\n//     }\n// }\n\n\n// A simple client for interacting with the fi-mcp-dev server.\n// In a real application, this would be much more robust, handling errors,\n// session persistence, and the full JSON-RPC spec.\n\n// All requests are proxied through our own API route to avoid CORS issues.\nconst MCP_API_PROXY_URL = '/api/mcp';\n\ninterface McpResponse {\n    jsonrpc: string;\n    id: number;\n    result?: {\n        content: { type: string; text: string; }[];\n    };\n    error?: {\n        code: number;\n        message: string;\n        data: {\n            login_url: string;\n        }\n    }\n}\n\n/**\n * A client for interacting with the Fi Money Mock MCP Server.\n */\nexport class McpClient {\n    private sessionId: string;\n\n    constructor() {\n        if (typeof window !== \"undefined\") {\n            const storedSessionId = sessionStorage.getItem('mcp-session-id');\n            this.sessionId = storedSessionId || `mcp-session-${crypto.randomUUID()}`;\n            sessionStorage.setItem('mcp-session-id', this.sessionId);\n        } else {\n            this.sessionId = `mcp-session-${crypto.randomUUID()}`;\n        }\n    }\n\n    /**\n     * Calls a tool on the MCP server via the Next.js API proxy.\n     * @param toolName The name of the tool to call (e.g., 'fetch_net_worth').\n     * @param args The arguments for the tool.\n     * @returns The parsed JSON response from the tool.\n     */\n    async callTool(toolName: string, args: Record<string, any> = {}): Promise<any> {\n        console.log(`Calling tool: ${toolName} with session: ${this.sessionId}`);\n        \n        try {\n            const response = await fetch(MCP_API_PROXY_URL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    mcpSessionId: this.sessionId,\n                    method: 'tools/call',\n                    params: {\n                        name: toolName,\n                        arguments: args,\n                    },\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const data: McpResponse = await response.json();\n\n            if (data.error) {\n                // Handle the case where the session is invalid and a login is required.\n                if (data.error.data?.login_url) {\n                    const loginUrl = `${data.error.data.login_url}&sessionId=${this.sessionId}`;\n                    console.warn(`MCP session invalid. Please log in: ${loginUrl}`);\n                    // In a real app, you would redirect the user to this URL\n                    // or open it in a popup.\n                    alert(`Your session has expired. Please log in by visiting this URL in a new tab:\\n\\n${loginUrl}\\n\\nAfter logging in, refresh this page.`);\n                    throw new Error(`Session expired. Please log in again.`);\n                }\n                throw new Error(`MCP Error: ${data.error.message}`);\n            }\n            \n            if (data.result && data.result.content[0]?.text) {\n                // The actual tool response is a JSON string within the 'text' field.\n                return JSON.parse(data.result.content[0].text);\n            }\n\n            return data.result;\n\n        } catch (error) {\n            console.error('Failed to call MCP tool:', error);\n            // This is a good place to add user-facing error handling.\n            // For now, we'll re-throw to be handled by the caller.\n            throw error;\n        }\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1389, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/app/%28protected%29/page.tsx"],"sourcesContent":["// \"use client\";\n\n// import { useState, useEffect } from \"react\";\n// import Link from \"next/link\";\n// import {\n//   Wallet,\n//   Landmark,\n//   TrendingUp,\n//   BadgeCheck,\n//   PiggyBank,\n//   Gem,\n// } from \"lucide-react\";\n// import { SummaryCard } from \"@/components/dashboard/summary-card\";\n// import { NetWorthChart } from \"@/components/dashboard/net-worth-chart\";\n// import { InsightsAgent } from \"@/components/dashboard/insights-agent\";\n// import { Button } from \"@/components/ui/button\";\n// import { Card, CardHeader, CardTitle, CardContent, CardDescription } from \"@/components/ui/card\";\n// import { McpClient } from \"@/services/mcp-client\";\n// import { useToast } from \"@/hooks/use-toast\";\n// import { Skeleton } from \"@/components/ui/skeleton\";\n\n\n// interface DashboardData {\n//   totalAssets: number;\n//   totalLiabilities: number;\n//   netWorth: number;\n//   creditScore: number | null;\n//   epfBalance: number | null;\n// }\n\n// export default function DashboardPage() {\n//   const [data, setData] = useState<DashboardData | null>(null);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const { toast } = useToast();\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       setIsLoading(true);\n//       try {\n//         const client = new McpClient();\n        \n//         // Fetch all data in parallel\n//         const [netWorthData, creditData, epfData] = await Promise.all([\n//           client.callTool(\"fetch_net_worth\"),\n//           client.callTool(\"fetch_credit_report\"),\n//           client.callTool(\"fetch_epf_details\"),\n//         ]);\n\n//         const assets = netWorthData.netWorthResponse.assetValues.reduce((acc: number, asset: any) => acc + Number(asset.value.units), 0);\n//         const liabilities = netWorthData.netWorthResponse.liabilityValues.reduce((acc: number, asset: any) => acc + Number(asset.value.units), 0);\n        \n//         // Safely access credit score\n//         const creditScore = creditData.creditReport?.creditScore ? Number(creditData.creditReport.creditScore) : null;\n        \n//         // Safely access EPF balance\n//         const epfBalance = epfData.epfResponse?.epfDetails?.[0]?.balance?.units \n//             ? Number(epfData.epfResponse.epfDetails[0].balance.units) \n//             : null;\n\n//         setData({\n//           totalAssets: assets,\n//           totalLiabilities: liabilities,\n//           netWorth: Number(netWorthData.netWorthResponse.totalNetWorthValue.units),\n//           creditScore: creditScore,\n//           epfBalance: epfBalance,\n//         });\n\n//       } catch (error: any) {\n//         console.error(\"Failed to fetch dashboard data:\", error);\n//         toast({\n//           title: \"Error Fetching Data\",\n//           description: \"Could not connect to the MCP server. Please ensure it is running and you are logged in.\",\n//           variant: \"destructive\",\n//         });\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, [toast]);\n\n\n//   return (\n//     <div className=\"flex flex-col gap-6\">\n//        <Card>\n//         <CardHeader className=\"flex-row items-center justify-between\">\n//           <div>\n//             <CardTitle>Dashboard</CardTitle>\n//             <CardDescription>Your strategic financial overview.</CardDescription>\n//           </div>\n//           <Button asChild>\n//             <Link href=\"/assets\">\n//               <Gem className=\"mr-2\" />\n//               Manage Net Worth\n//             </Link>\n//           </Button>\n//         </CardHeader>\n//       </Card>\n      \n//       {isLoading ? (\n//         <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n//             <Skeleton className=\"h-28\" />\n//             <Skeleton className=\"h-28\" />\n//             <Skeleton className=\"h-28\" />\n//             <Skeleton className=\"h-28\" />\n//             <Skeleton className=\"h-28\" />\n//         </div>\n//       ) : data ? (\n//         <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n//             <SummaryCard\n//             title=\"Assets\"\n//             value={`₹${data.totalAssets.toLocaleString(\"en-IN\")}`}\n//             Icon={Wallet}\n//             />\n//             <SummaryCard\n//             title=\"Liabilities\"\n//             value={`₹${data.totalLiabilities.toLocaleString(\"en-IN\")}`}\n//             Icon={Landmark}\n//             />\n//             <SummaryCard\n//             title=\"My Net Worth\"\n//             value={`₹${data.netWorth.toLocaleString(\"en-IN\")}`}\n//             Icon={TrendingUp}\n//             />\n//             <SummaryCard\n//             title=\"Credit Score\"\n//             value={data.creditScore ? String(data.creditScore) : \"N/A\"}\n//             Icon={BadgeCheck}\n//             />\n//             <SummaryCard\n//             title=\"EPF Balance\"\n//             value={data.epfBalance ? `₹${data.epfBalance.toLocaleString(\"en-IN\")}` : \"N/A\"}\n//             Icon={PiggyBank}\n//             />\n//         </div>\n//       ) : (\n//          <Card>\n//             <CardContent className=\"pt-6\">\n//                 <p>Could not load your financial overview. Please make sure the MCP server is running and try again.</p>\n//             </CardContent>\n//         </Card>\n//       )}\n\n//       <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-4\">\n//         <NetWorthChart />\n//         <InsightsAgent />\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport {\n  Wallet,\n  Landmark,\n  TrendingUp,\n  BadgeCheck,\n  PiggyBank,\n  Gem,\n} from \"lucide-react\";\nimport { SummaryCard } from \"@/components/dashboard/summary-card\";\nimport { NetWorthChart } from \"@/components/dashboard/net-worth-chart\";\nimport { InsightsAgent } from \"@/components/dashboard/insights-agent\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription } from \"@/components/ui/card\";\nimport { McpClient } from \"@/services/mcp-client\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\n\ninterface DashboardData {\n  totalAssets: number;\n  totalLiabilities: number;\n  netWorth: number;\n  creditScore: number | null;\n  epfBalance: number | null;\n}\n\nexport default function DashboardPage() {\n  const [data, setData] = useState<DashboardData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const client = new McpClient();\n        \n        // Fetch all data in parallel\n        const [netWorthData, creditData, epfData] = await Promise.all([\n          client.callTool(\"fetch_net_worth\"),\n          client.callTool(\"fetch_credit_report\"),\n          client.callTool(\"fetch_epf_details\"),\n        ]);\n\n        const assets = netWorthData.netWorthResponse.assetValues.reduce((acc: number, asset: any) => acc + Number(asset.value.units), 0);\n        const liabilities = netWorthData.netWorthResponse.liabilityValues.reduce((acc: number, asset: any) => acc + Number(asset.value.units), 0);\n        \n        // Safely access credit score\n        const creditScore = creditData.creditReport?.creditScore ? Number(creditData.creditReport.creditScore) : null;\n        \n        // Safely access EPF balance\n        const epfBalance = epfData.epfResponse?.epfDetails?.[0]?.balance?.units \n            ? Number(epfData.epfResponse.epfDetails[0].balance.units) \n            : null;\n\n        setData({\n          totalAssets: assets,\n          totalLiabilities: liabilities,\n          netWorth: Number(netWorthData.netWorthResponse.totalNetWorthValue.units),\n          creditScore: creditScore,\n          epfBalance: epfBalance,\n        });\n\n      } catch (error: any) {\n        console.error(\"Failed to fetch dashboard data:\", error);\n        toast({\n          title: \"Error Fetching Data\",\n          description: \"Could not connect to the MCP server. Please ensure it is running and you are logged in.\",\n          variant: \"destructive\",\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [toast]);\n\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n       <Card>\n        <CardHeader className=\"flex-row items-center justify-between\">\n          <div>\n            <CardTitle>Dashboard</CardTitle>\n            <CardDescription>Your strategic financial overview.</CardDescription>\n          </div>\n          <Button asChild>\n            <Link href=\"/assets\">\n              <Gem className=\"mr-2\" />\n              Manage Assets\n            </Link>\n          </Button>\n        </CardHeader>\n      </Card>\n      \n      {isLoading ? (\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n            <Skeleton className=\"h-28\" />\n            <Skeleton className=\"h-28\" />\n            <Skeleton className=\"h-28\" />\n            <Skeleton className=\"h-28\" />\n            <Skeleton className=\"h-28\" />\n        </div>\n      ) : data ? (\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n            <SummaryCard\n            title=\"Assets\"\n            value={`₹${data.totalAssets.toLocaleString(\"en-IN\")}`}\n            Icon={Wallet}\n            />\n            <SummaryCard\n            title=\"Liabilities\"\n            value={`₹${data.totalLiabilities.toLocaleString(\"en-IN\")}`}\n            Icon={Landmark}\n            />\n            <SummaryCard\n            title=\"My Net Worth\"\n            value={`₹${data.netWorth.toLocaleString(\"en-IN\")}`}\n            Icon={TrendingUp}\n            />\n            <SummaryCard\n            title=\"Credit Score\"\n            value={data.creditScore ? String(data.creditScore) : \"N/A\"}\n            Icon={BadgeCheck}\n            />\n            <SummaryCard\n            title=\"EPF Balance\"\n            value={data.epfBalance ? `₹${data.epfBalance.toLocaleString(\"en-IN\")}` : \"N/A\"}\n            Icon={PiggyBank}\n            />\n        </div>\n      ) : (\n         <Card>\n            <CardContent className=\"pt-6\">\n                <p>Could not load your financial overview. Please make sure the MCP server is running and try again.</p>\n            </CardContent>\n        </Card>\n      )}\n\n      <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-4\">\n        <NetWorthChart />\n        <InsightsAgent />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}