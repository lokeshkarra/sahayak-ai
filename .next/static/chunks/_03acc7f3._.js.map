{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/src/app/%28protected%29/page.tsx"],"sourcesContent":["// // \"use client\";\n\n// // import Link from \"next/link\";\n// // import {\n// //   Wallet,\n// //   Landmark,\n// //   TrendingUp,\n// //   BadgeCheck,\n// //   PiggyBank,\n// //   Gem,\n// // } from \"lucide-react\";\n// // import { SummaryCard } from \"@/components/dashboard/summary-card\";\n// // import { NetWorthChart } from \"@/components/dashboard/net-worth-chart\";\n// // import { InsightsAgent } from \"@/components/dashboard/insights-agent\";\n// // import { financialData, getTotalAssets, getTotalLiabilities } from \"@/lib/mock-data\";\n// // import { Button } from \"@/components/ui/button\";\n// // import { Card, CardHeader, CardTitle, CardContent, CardDescription } from \"@/components/ui/card\";\n\n// // export default function DashboardPage() {\n// //   const totalAssets = getTotalAssets();\n// //   const totalLiabilities = getTotalLiabilities();\n// //   const netWorth = totalAssets - totalLiabilities;\n\n// //   return (\n// //     <div className=\"flex flex-col gap-6\">\n// //        <Card>\n// //         <CardHeader className=\"flex-row items-center justify-between\">\n// //           <div>\n// //             <CardTitle>Dashboard</CardTitle>\n// //             <CardDescription>Your strategic financial overview.</CardDescription>\n// //           </div>\n// //           <Button asChild>\n// //             <Link href=\"/assets\">\n// //               <Gem className=\"mr-2\" />\n// //               Manage Net Worth\n// //             </Link>\n// //           </Button>\n// //         </CardHeader>\n// //       </Card>\n// //       <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n// //         <SummaryCard\n// //           title=\"Assets\"\n// //           value={`₹${totalAssets.toLocaleString(\"en-IN\")}`}\n// //           Icon={Wallet}\n// //         />\n// //         <SummaryCard\n// //           title=\"Liabilities\"\n// //           value={`₹${totalLiabilities.toLocaleString(\"en-IN\")}`}\n// //           Icon={Landmark}\n// //         />\n// //         <SummaryCard\n// //           title=\"My Net Worth\"\n// //           value={`₹${netWorth.toLocaleString(\"en-IN\")}`}\n// //           Icon={TrendingUp}\n// //         />\n// //         <SummaryCard\n// //           title=\"Credit Score\"\n// //           value={String(financialData.creditScore)}\n// //           Icon={BadgeCheck}\n// //         />\n// //         <SummaryCard\n// //           title=\"EPF Balance\"\n// //           value={`₹${financialData.epf.toLocaleString(\"en-IN\")}`}\n// //           Icon={PiggyBank}\n// //         />\n// //       </div>\n// //       <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-4\">\n// //         <NetWorthChart />\n// //         <InsightsAgent />\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n\n// \"use client\";\n\n// import { useState, useEffect } from \"react\";\n// import Link from \"next/link\";\n// import {\n//   Wallet,\n//   Landmark,\n//   TrendingUp,\n//   BadgeCheck,\n//   PiggyBank,\n//   Gem,\n// } from \"lucide-react\";\n// import { SummaryCard } from \"@/components/dashboard/summary-card\";\n// import { NetWorthChart } from \"@/components/dashboard/net-worth-chart\";\n// import { InsightsAgent } from \"@/components/dashboard/insights-agent\";\n// import { Button } from \"@/components/ui/button\";\n// import { Card, CardHeader, CardTitle, CardContent, CardDescription } from \"@/components/ui/card\";\n// import { McpClient } from \"@/services/mcp-client\";\n// import { useToast } from \"@/hooks/use-toast\";\n// import { Skeleton } from \"@/components/ui/skeleton\";\n\n\n// interface DashboardData {\n//   totalAssets: number;\n//   totalLiabilities: number;\n//   netWorth: number;\n//   creditScore: number;\n//   epfBalance: number;\n// }\n\n// export default function DashboardPage() {\n//   const [data, setData] = useState<DashboardData | null>(null);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const { toast } = useToast();\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       setIsLoading(true);\n//       try {\n//         const client = new McpClient();\n        \n//         // Fetch all data in parallel\n//         const [netWorthData, creditData, epfData] = await Promise.all([\n//           client.callTool(\"fetch_net_worth\"),\n//           client.callTool(\"fetch_credit_report\"),\n//           client.callTool(\"fetch_epf_details\"),\n//         ]);\n\n//         const assets = netWorthData.netWorthResponse.assetValues.reduce((acc: number, asset: any) => acc + Number(asset.value.units), 0);\n//         const liabilities = netWorthData.netWorthResponse.liabilityValues.reduce((acc: number, asset: any) => acc + Number(asset.value.units), 0);\n        \n//         setData({\n//           totalAssets: assets,\n//           totalLiabilities: liabilities,\n//           netWorth: Number(netWorthData.netWorthResponse.totalNetWorthValue.units),\n//           creditScore: Number(creditData.creditReport.creditScore),\n//           epfBalance: Number(epfData.epfResponse.epfDetails[0].balance.units),\n//         });\n\n//       } catch (error: any) {\n//         console.error(\"Failed to fetch dashboard data:\", error);\n//         toast({\n//           title: \"Error Fetching Data\",\n//           description: \"Could not connect to the MCP server. Please ensure it is running and you are logged in.\",\n//           variant: \"destructive\",\n//         });\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, [toast]);\n\n\n//   return (\n//     <div className=\"flex flex-col gap-6\">\n//        <Card>\n//         <CardHeader className=\"flex-row items-center justify-between\">\n//           <div>\n//             <CardTitle>Dashboard</CardTitle>\n//             <CardDescription>Your strategic financial overview.</CardDescription>\n//           </div>\n//           <Button asChild>\n//             <Link href=\"/assets\">\n//               <Gem className=\"mr-2\" />\n//               Manage Net Worth\n//             </Link>\n//           </Button>\n//         </CardHeader>\n//       </Card>\n      \n//       {isLoading ? (\n//         <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n//             <Skeleton className=\"h-28\" />\n//             <Skeleton className=\"h-28\" />\n//             <Skeleton className=\"h-28\" />\n//             <Skeleton className=\"h-28\" />\n//             <Skeleton className=\"h-28\" />\n//         </div>\n//       ) : data ? (\n//         <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n//             <SummaryCard\n//             title=\"Assets\"\n//             value={`₹${data.totalAssets.toLocaleString(\"en-IN\")}`}\n//             Icon={Wallet}\n//             />\n//             <SummaryCard\n//             title=\"Liabilities\"\n//             value={`₹${data.totalLiabilities.toLocaleString(\"en-IN\")}`}\n//             Icon={Landmark}\n//             />\n//             <SummaryCard\n//             title=\"My Net Worth\"\n//             value={`₹${data.netWorth.toLocaleString(\"en-IN\")}`}\n//             Icon={TrendingUp}\n//             />\n//             <SummaryCard\n//             title=\"Credit Score\"\n//             value={String(data.creditScore)}\n//             Icon={BadgeCheck}\n//             />\n//             <SummaryCard\n//             title=\"EPF Balance\"\n//             value={`₹${data.epfBalance.toLocaleString(\"en-IN\")}`}\n//             Icon={PiggyBank}\n//             />\n//         </div>\n//       ) : (\n//          <Card>\n//             <CardContent className=\"pt-6\">\n//                 <p>Could not load your financial overview. Please make sure the MCP server is running and try again.</p>\n//             </CardContent>\n//         </Card>\n//       )}\n\n//       <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-4\">\n//         <NetWorthChart />\n//         <InsightsAgent />\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n} from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Loader } from \"lucide-react\";\nimport { Logo } from \"@/components/logo\";\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"1313131313\"); // Test number for \"Balanced Growth Tracker\"\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const router = useRouter();\n\n  const handleLogin = (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(\"\");\n\n    // Simulate network delay\n    // setTimeout(() => {\n    //   // In a real app, you'd authenticate. Here we just check for the test user.\n    //   // The fi-mcp-dev server uses the phone number for identity but doesn't validate passwords.\n    //   if (username) { // Just need a username for the mock server\n    //     if (typeof window !== \"undefined\") {\n    //       sessionStorage.setItem(\"isLoggedIn\", \"true\");\n    //       sessionStorage.setItem(\"mcp-user\", username);\n    //       // We clear the session ID on new login to force re-authentication with MCP server\n    //       sessionStorage.removeItem('mcp-session-id');\n    //     }\n    //     router.push(\"/\");\n    //   } else {\n    //     setError(\"Please enter a phone number.\");\n    //     setIsLoading(false);\n    //   }\n    // }, 500);\n  };\n\n  const handleForgotPassword = () => {\n    // A real implementation would navigate to a password reset page\n    alert(\"Forgot password functionality is a placeholder in this prototype.\");\n  };\n\n  return (\n    <main className=\"flex items-center justify-center min-h-screen bg-black\">\n      <Card className=\"w-full max-w-sm bg-gray-950 border border-green-500/30 text-white shadow-lg shadow-green-500/20\">\n        <CardHeader className=\"text-center\">\n            <div className=\"mx-auto mb-4 flex justify-center\">\n                <Logo />\n            </div>\n          <CardDescription className=\"text-gray-400\">Enter your credentials to access your dashboard.</CardDescription>\n        </CardHeader>\n        <form onSubmit={handleLogin}>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"username\">Phone Number</Label>\n              <Input\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"1313131313\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                required\n                className=\"bg-gray-800/50 border-gray-700 placeholder:text-gray-500 focus:border-green-500\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"•••••••• (can be anything)\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                className=\"bg-gray-800/50 border-gray-700 placeholder:text-gray-500 focus:border-green-500\"\n              />\n            </div>\n            <div className=\"flex justify-end\">\n                <Button\n                    onClick={handleForgotPassword}\n                    type=\"button\"\n                    variant=\"link\"\n                    className=\"p-0 h-auto text-sm font-normal text-gray-400 hover:text-green-400\"\n                >\n                    Forgot Password?\n                </Button>\n            </div>\n            {error && <p className=\"text-sm font-medium text-red-500\">{error}</p>}\n          </CardContent>\n          <CardFooter>\n            <Button type=\"submit\" className=\"w-full bg-green-600 hover:bg-green-700 text-primary-foreground\" disabled={isLoading}>\n              {isLoading && <Loader className=\"mr-2 h-4 w-4 animate-spin\" />}\n              Log in\n            </Button>\n          </CardFooter>\n        </form>\n      </Card>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":["file:///home/lokeshkarra/Downloads/pilot-project/node_modules/%40radix-ui/react-label/src/label.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;AACvB,SAAS,iBAAiB;AActB;;;;;AARJ,IAAM,OAAO;AAMb,IAAM,0KAAc,aAAA,EAAqC,CAAC,OAAO,iBAAiB;IAChF,OACE,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,2KAAC,YAAA,CAAU,KAAA,EAAV;QACE,GAAG,KAAA;QACJ,KAAK;QACL,aAAa,CAAC,UAAU;YAEtB,MAAM,SAAS,MAAM,MAAA;YACrB,IAAI,OAAO,OAAA,CAAQ,iCAAiC,EAAG,CAAA;YAEvD,MAAM,WAAA,GAAc,KAAK;YAEzB,IAAI,CAAC,MAAM,gBAAA,IAAoB,MAAM,MAAA,GAAS,EAAG,CAAA,MAAM,cAAA,CAAe;QACxE;IAAA;AAGN,CAAC;AAED,MAAM,WAAA,GAAc;AAIpB,IAAM,OAAO","ignoreList":[0],"debugId":null}}]
}